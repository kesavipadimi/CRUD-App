{"version":3,"sources":["Redux/ActionTypes.js","Redux/Profiles/profileReducer.js","Redux/Reducers.js","Redux/Store.js","Redux/Profiles/profileActions.js","Services/service.js","Components/Profiles/profiles.js","Components/Profiles/comments.js","Components/Profiles/viewProfile.js","App.js","reportWebVitals.js","index.js"],"names":["UPDATE_USER_LIST","UPDATE_POST_LIST","UPDATE_POST_COMMENTS","UPDATE_COMMENT","initailState","userList","postList","commentsList","comment","profileReducer","state","action","type","payload","rootreducer","combineReducers","profile","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","updateUserList","updatePostList","updatePostComments","profileActions","getProfileData","dispatch","fetch","then","res","json","getPostsData","id","getPosts","getCommentsData","getComments","addPostComment","getState","randowKey","Math","floor","random","method","body","JSON","stringify","headers","response","data","length","deletePostComment","deleteComment","filter","item","updateComment","useStyles","makeStyles","theme","root","flexGrow","Appbar","zIndex","drawer","menuButton","marginRight","spacing","listItems","width","margin","Avatar","height","alignCenter","display","alignItems","justifyContent","textAlign","card","padding","mapDispatchToProps","connect","history","classes","useEffect","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","title","Grid","container","map","name","email","xs","sm","md","lg","Card","src","CardContent","CardActions","Button","btn","onClick","push","viewProfileClick","imgLink","input","marginLeft","flex","iconButton","gridItem","background","borderRadius","delButton","right","top","wrap","Paper","component","InputBase","placeholder","value","onChange","e","target","Divider","divider","orientation","drawerWidth","breakpoints","up","flexShrink","appBar","toolbar","mixins","drawerPaper","content","fontWeight","detail","fontSize","sideBarIcons","location","useTheme","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","align","address","city","phone","undefined","document","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","App","basename","process","exact","path","Profiles","ViewProfile","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c9fe3dd6.chunk.js","sourcesContent":["export const UPDATE_USER_LIST = 'UPDATE_USER_LIST';\r\nexport const UPDATE_POST_LIST = 'UPDATE_POST_LIST';\r\nexport const UPDATE_POST_COMMENTS = 'UPDATE_POST_COMMENTS';\r\nexport const UPDATE_COMMENT = 'UPDATE_COMMENT';","import {UPDATE_USER_LIST, UPDATE_POST_LIST, UPDATE_POST_COMMENTS, UPDATE_COMMENT} from '../../Redux/ActionTypes';\r\n\r\nconst initailState = {\r\n    userList:[],\r\n    postList:[],\r\n    commentsList: [],\r\n    comment: \"\"\r\n}\r\n\r\nconst profileReducer = (state=initailState, action) =>{\r\n    const {type, payload} = action;\r\n\r\n    switch(type){\r\n        case UPDATE_USER_LIST:\r\n            return {...state, userList:payload}\r\n        case UPDATE_POST_LIST:\r\n            return {...state, postList: payload}    \r\n        case UPDATE_POST_COMMENTS:\r\n            return {...state, commentsList: payload}\r\n        case UPDATE_COMMENT:\r\n            return {...state, comment: payload}\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default profileReducer;","import {combineReducers} from 'redux';\r\nimport profileReducer from '../Redux/Profiles/profileReducer';\r\n\r\nconst rootreducer = combineReducers({\r\n    profile:profileReducer,\r\n})\r\n\r\nexport default rootreducer;","import {createStore, compose, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootreducer from '../Redux/Reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootreducer, {}, composeEnhancers(applyMiddleware(thunk)))\r\n\r\nexport default store;","import {getPosts, getProfiles, getComments, addComment, deleteComment} from '../../Services/service';\r\nimport {UPDATE_USER_LIST, UPDATE_POST_LIST, UPDATE_POST_COMMENTS, UPDATE_COMMENT} from '../../Redux/ActionTypes';\r\n\r\nconst getProfileData = () => (dispatch) => {\r\n    getProfiles().then(res => {\r\n        dispatch(updateUserList(res))\r\n    });\r\n} \r\n\r\nconst getPostsData = (id) => (dispatch) => {\r\n    getPosts(id).then(res => {\r\n        dispatch(updatePostList(res))\r\n    });\r\n} \r\n\r\nconst getCommentsData = (id) => (dispatch) => {\r\n    getComments(id).then(res => {\r\n        dispatch(updatePostComments(res))\r\n    });\r\n} \r\n\r\nconst addPostComment = (payload) => (dispatch, getState) => {\r\n    const {profile: {commentsList}} = getState();\r\n    const randowKey = Math.floor(Math.random() * 101);\r\n\r\n    addComment(payload).then(res => {\r\n        const data = commentsList.length > 0 ? [...commentsList, {...res, id: randowKey}] : [{...res,  id: randowKey}];\r\n        dispatch(updatePostComments(data))\r\n    });\r\n}  \r\n\r\nconst deletePostComment = (id) => (dispatch, getState) => {\r\n    const {profile: {commentsList}} = getState();\r\n\r\n    deleteComment(id).then(() => {\r\n        const data = commentsList.length > 0 && commentsList.filter(item => item.id !== id);\r\n        dispatch(updatePostComments(data))\r\n    });\r\n}  \r\n\r\nconst updateUserList = (payload) =>({\r\n    type:UPDATE_USER_LIST,\r\n    payload\r\n});\r\n\r\nconst updatePostList = (payload) =>({\r\n    type:UPDATE_POST_LIST,\r\n    payload\r\n});\r\n\r\nconst updatePostComments = (payload) =>({\r\n    type:UPDATE_POST_COMMENTS,\r\n    payload\r\n});\r\n\r\nconst updateComment = (payload) => ({\r\n    type: UPDATE_COMMENT,\r\n    payload\r\n});\r\n\r\nconst profileActions = {\r\n    getProfileData,\r\n    updateUserList,\r\n    getPostsData,\r\n    updatePostList,\r\n    updatePostComments,\r\n    getCommentsData,\r\n    addPostComment,\r\n    deletePostComment,\r\n    updateComment\r\n};\r\n\r\nexport default profileActions;\r\n","export const getProfiles = () => {\r\n    return fetch('https://jsonplaceholder.typicode.com/users').then(res => res.json());    \r\n};\r\n\r\nexport const getPosts = (id) => {\r\n    return fetch(`https://jsonplaceholder.typicode.com/user/${id}/posts/`).then(res => res.json());    \r\n};\r\n\r\nexport const getComments = (id) => {\r\n    return fetch(`https://jsonplaceholder.typicode.com/posts/${id}/comments`).then(res => res.json());    \r\n};\r\n\r\nexport const addComment = (comment) => {\r\n    return fetch('https://jsonplaceholder.typicode.com/comments', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            \"postId\": 1,\r\n            \"id\": 1,\r\n            \"name\": \"John Snow\",\r\n            \"email\": \"Eliseo@gardner.biz\",\r\n            \"body\": comment\r\n        }),\r\n        headers: {\r\n          'Content-type': 'application/json; charset=UTF-8',\r\n        },\r\n      }).then((response) => response.json())\r\n};\r\n\r\nexport const deleteComment = (id) => {\r\n    return fetch(`https://jsonplaceholder.typicode.com/comments/${id}`, {\r\n        method: 'DELETE',\r\n    });\r\n};\r\n","import React, {useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {AppBar, Toolbar, Typography, IconButton, Grid, Card, CardActions, CardContent, Button, Avatar} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport profileActions from '../../Redux/Profiles/profileActions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  Appbar:{\r\n    zIndex: theme.zIndex.drawer + 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  listItems:{\r\n    width:\"80%\",\r\n    margin: '50px auto',\r\n  },\r\n  Avatar:{\r\n    width: '50%',\r\n    height: 'auto',\r\n    margin: '0 auto'\r\n  },\r\n  alignCenter: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    textAlign: 'center'\r\n  },\r\n  card: {\r\n      padding: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Profiles = ({history, getProfileData, userList}) => {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    getProfileData();\r\n  }, [])\r\n\r\n  const viewProfileClick = (item) =>{\r\n    history.push('/ViewProfile', {profile: item});\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\" className={classes.Appbar}>\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Profiles\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Toolbar />\r\n      <Grid container spacing={5} className={classes.listItems}>\r\n      {userList.map((item) =>{\r\n        const {name, email, id} = item\r\n        return(\r\n            <Grid item xs={12} sm={6} md={4} lg={3} className={classes.alignCenter}>\r\n                <Card className={classes.card} >\r\n                    <Avatar className={classes.Avatar} src=\"https://i.pinimg.com/originals/51/f6/fb/51f6fb256629fc755b8870c801092942.png\" />\r\n                    <CardContent>\r\n                        <Typography variant=\"h6\">{name} </Typography> \r\n                        <Typography variant=\"subtitle1\">{email}</Typography>\r\n                    </CardContent>\r\n                    <CardActions className={classes.alignCenter}>\r\n                        <Button variant=\"contained\" className={classes.btn} color=\"primary\" onClick={() => viewProfileClick(item)}>View Profile</Button> \r\n                    </CardActions>\r\n                </Card>\r\n            </Grid>    \r\n          )\r\n      })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userList:state.profile.userList\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = profileActions;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profiles);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Avatar, Grid, Typography, Paper, InputBase, Divider, IconButton } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport profileActions from '../../Redux/Profiles/profileActions';\r\n\r\nconst imgLink = \"https://www.oneworldplayproject.com/wp-content/uploads/2016/03/avatar-1024x1024.jpg\";\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      width: '100%'\r\n    },\r\n    input: {\r\n      marginLeft: theme.spacing(1),\r\n      flex: 1,\r\n    },\r\n    iconButton: {\r\n      padding: 10,\r\n    },\r\n    gridItem: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    comment: {\r\n        background: \"#e3f2fd\", \r\n        borderRadius: 10,\r\n        position: \"relative\"\r\n    },\r\n    delButton: {\r\n        position: \"absolute\",\r\n        right: 0,\r\n        top: 0\r\n    }\r\n  }));\r\n\r\nconst Comments = ({commentsList, addPostComment, deletePostComment, comment, updateComment}) => {\r\n    const classes = useStyles();\r\n\r\n  return (\r\n     <>\r\n      {commentsList.length > 0 && commentsList.map((item) => {\r\n        const {name, body, id} = item;\r\n            return(\r\n                <>\r\n                    <Grid item container wrap=\"nowrap\" xs={11} spacing={4} className={classes.gridItem}>\r\n                        <Grid item xs={3} sm={2} md={1}>\r\n                            <Avatar src={imgLink} />\r\n                        </Grid>\r\n                        <Grid item className={classes.comment} xs={9} sm={10} md={11}>\r\n                            <Typography variant=\"subtitle2\" color=\"primary\">{name}</Typography>\r\n                            <IconButton className={classes.delButton} onClick={() => deletePostComment(id)}>\r\n                                <DeleteIcon color=\"error\" />\r\n                            </IconButton>\r\n                            <Typography variant=\"body2\">{body}</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </>)\r\n            })}\r\n            <Grid container item wrap=\"nowrap\" xs={11} spacing={4} className={classes.gridItem}>\r\n            <Grid item>\r\n                <Avatar src={imgLink} />\r\n            </Grid>\r\n            <Paper className={classes.root} component=\"form\" >\r\n                <InputBase\r\n                    className={classes.input}\r\n                    placeholder=\"Write a comment\"     \r\n                    value={comment} \r\n                    onChange={(e) => updateComment(e.target.value)}\r\n                />\r\n                <Divider className={classes.divider} orientation=\"vertical\" />\r\n                <IconButton color=\"primary\" className={classes.iconButton} onClick={() => {addPostComment(comment);updateComment(\"\")}}>\r\n                    <SendIcon />\r\n                </IconButton>\r\n            </Paper>\r\n            </Grid>\r\n        </>    \r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        commentsList: state.profile.commentsList,\r\n        comment: state.profile.comment\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = profileActions;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Comments);\r\n\r\n\r\n","import React, {useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport {AppBar, Toolbar, Typography, IconButton, Drawer, Avatar, Card, Grid, CardContent, Hidden} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport Comments from './comments';\r\nimport profileActions from '../../Redux/Profiles/profileActions';\r\n\r\nconst imgLink = \"https://i.pinimg.com/originals/51/f6/fb/51f6fb256629fc755b8870c801092942.png\";\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0\r\n        }\r\n    },\r\n    appBar: {\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            marginLeft: drawerWidth,\r\n        }\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            display: \"none\"\r\n        }\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        width: drawerWidth\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(6)\r\n    },\r\n    Avatar:{\r\n        width: '50%',\r\n        height: 'auto',\r\n        margin: '30px auto'\r\n    },\r\n    name:{\r\n        fontWeight: 700,\r\n        margin: theme.spacing(1)\r\n    },\r\n    iconButton: {\r\n        padding: theme.spacing(1),\r\n    },\r\n    detail: {\r\n        padding: theme.spacing(1, 3),\r\n        display: 'flex',\r\n        fontSize: '14px'\r\n    },\r\n    sideBarIcons: {\r\n        fontSize: '22px',\r\n        marginRight: theme.spacing(1)\r\n    }\r\n}));  \r\n\r\nconst ViewProfile = ({getPostsData, getCommentsData, postList, location: {state}, window}) => {\r\n    const {profile} = state || {};\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        getPostsData(profile.id);\r\n        getCommentsData(profile.id);\r\n    }, []);\r\n\r\n    const theme = useTheme();\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n\r\n    const drawer = (\r\n        <>\r\n        <Toolbar/>\r\n        <Avatar src={imgLink} className={classes.Avatar} />\r\n        <Typography align='center' variant=\"h6\" color=\"primary\" className={classes.name}>{profile.name}</Typography>\r\n        <Typography align='center' variant=\"subtitle1\" color=\"primary\" className={classes.detail}><RoomIcon className={classes.sideBarIcons} />{profile.address.city}</Typography>\r\n        <Typography align='center' variant=\"subtitle1\" color=\"primary\" className={classes.detail}><EmailIcon className={classes.sideBarIcons} />{profile.email}</Typography>\r\n        <Typography align='center' variant=\"subtitle1\" color=\"primary\" className={classes.detail}><PhoneIcon className={classes.sideBarIcons} />{profile.phone}</Typography>\r\n        </>\r\n    );\r\n\r\n    const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\nreturn (\r\n    <div className={classes.root}>\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n            <Toolbar>\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    edge=\"start\"\r\n                    onClick={handleDrawerToggle}\r\n                    className={classes.menuButton}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    View Profile\r\n                </Typography>\r\n            </Toolbar>\r\n            </AppBar>\r\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n                <Hidden smUp implementation=\"css\">\r\n                    <Drawer\r\n                        container={container}\r\n                        variant=\"temporary\"\r\n                        anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n                        open={mobileOpen}\r\n                        onClose={handleDrawerToggle}\r\n                        classes={{\r\n                            paper: classes.drawerPaper\r\n                        }}\r\n                        ModalProps={{\r\n                            keepMounted: true\r\n                        }}\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n                <Hidden xsDown implementation=\"css\">\r\n                    <Drawer\r\n                        classes={{\r\n                        paper: classes.drawerPaper\r\n                        }}\r\n                        variant=\"permanent\"\r\n                        open\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </nav>\r\n            <main className={classes.content}>\r\n                <Toolbar/>\r\n                <Grid container spacing={10}>\r\n                    <Grid item xs={12} md={11} lg={9}>\r\n                        <Typography variant=\"h4\" color=\"primary\">Posts</Typography>\r\n                        {postList.map(item => \r\n                        <>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Grid item container wrap=\"nowrap\" xs={11}>\r\n                                    <Grid item  xs={3} sm={2} md={1}>\r\n                                        <Avatar src={imgLink} />\r\n                                    </Grid>\r\n                                    <Grid item xs={9} sm={10} md={11}>\r\n                                        <Typography variant=\"h6\" color=\"primary\">{item.title}</Typography>\r\n                                        <Typography variant=\"subtitle1\">{item.body}</Typography>\r\n                                    </Grid>\r\n                                </Grid>                    \r\n                            </CardContent>\r\n                        </Card>\r\n                        <Comments />\r\n                        </>)\r\n                        }\r\n                    </Grid>      \r\n                </Grid>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        postList: state.profile.postList\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = profileActions;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewProfile);\r\n\r\n","import {BrowserRouter, Route} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store  from './Redux/Store';\nimport Profiles from './Components/Profiles/profiles';\nimport ViewProfile from './Components/Profiles/viewProfile';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Route exact path=\"/\" component={Profiles}/>\n    <Route path=\"/ViewProfile\" component={ViewProfile}/>\n    </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}